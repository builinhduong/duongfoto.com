/**
 * Project Gallery Loader
 * Loads and displays projects from JSON data
 */

// Fetch projects data from JSON file
async function fetchProjects(category) {
  try {
    const response = await fetch(`data/${category}.json`);
    if (!response.ok) {
      throw new Error(`HTTP error! status: ${response.status}`);
    }
    const data = await response.json();
    return data;
  } catch (error) {
    console.error('Could not fetch projects:', error);
    return [];
  }
}

// Create project card HTML
function createProjectCard(project) {
  return `
    <div class="project-card bg-white rounded-lg overflow-hidden shadow-md hover:shadow-xl transition-all duration-300 opacity-0 animate-fade-in" data-project-id="${project.id}">
      <div class="overflow-hidden h-60">
        <img 
          src="${project.thumbnail}" 
          alt="${project.title}" 
          class="w-full h-full object-contain transition duration-500 transform hover:scale-110"
        >
      </div>
      <div class="p-4">
        <h3 class="text-xl font-bold mb-1">${project.title}</h3>
        <div class="flex items-center text-gray-500 text-sm mb-2">
          <span class="mr-3">${project.date}</span>
          <span>${project.location}</span>
        </div>
        <p class="text-gray-700 mb-4">${project.description}</p>
        <a href="#" class="view-project text-black font-medium hover:underline" data-project-id="${project.id}">
          Xem chi tiết
        </a>
      </div>
    </div>
  `;
}

// Create project modal HTML
function createProjectModal(project) {
  const imagesHTML = project.images.map(image => 
    `<div class="overflow-hidden">
      <a href="${image.src}" data-fancybox="gallery-${project.id}">
        <img 
          src="${image.src}" 
          alt="${image.alt}" 
          class="w-full h-80 object-contain bg-gray-100 opacity-0 animate-fade-in transition duration-500 transform hover:scale-110"
        >
      </a>
    </div>`
  ).join('');

  return `
    <div id="modal-${project.id}" class="project-modal fixed inset-0 bg-black bg-opacity-80 z-50 flex items-center justify-center hidden">
      <div class="modal-content bg-white max-w-4xl w-full max-h-screen overflow-y-auto rounded-lg">
        <div class="p-4 border-b flex justify-between items-center">
          <h3 class="text-2xl font-bold">${project.title}</h3>
          <button class="close-modal text-2xl">&times;</button>
        </div>
        <div class="p-4">
          <div class="flex flex-wrap text-gray-500 text-sm mb-4">
            <span class="mr-3">${project.date}</span>
            <span>${project.location}</span>
          </div>
          <p class="text-gray-700 mb-6">${project.description}</p>
          
          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
            ${imagesHTML}
          </div>
        </div>
      </div>
    </div>
  `;
}

// Initialize the project gallery
async function initProjects(category) {
  const projectsContainer = document.getElementById('projects-container');
  const modalsContainer = document.getElementById('modals-container');
  
  if (!projectsContainer || !modalsContainer) return;
  
  const projects = await fetchProjects(category);
  
  if (projects.length === 0) {
    projectsContainer.innerHTML = '<p class="text-center py-10">Không có dự án nào được tìm thấy.</p>';
    return;
  }
  
  // Create project cards
  let projectsHTML = '';
  let modalsHTML = '';
  
  projects.forEach(project => {
    projectsHTML += createProjectCard(project);
    modalsHTML += createProjectModal(project);
  });
  
  projectsContainer.innerHTML = projectsHTML;
  modalsContainer.innerHTML = modalsHTML;
  
  // Add event listeners for view project buttons
  document.querySelectorAll('.view-project').forEach(button => {
    button.addEventListener('click', function(e) {
      e.preventDefault();
      const projectId = this.getAttribute('data-project-id');
      document.getElementById(`modal-${projectId}`).classList.remove('hidden');
      document.body.classList.add('overflow-hidden');
    });
  });
  
  // Add event listeners for close modal buttons
  document.querySelectorAll('.close-modal').forEach(button => {
    button.addEventListener('click', function() {
      this.closest('.project-modal').classList.add('hidden');
      document.body.classList.remove('overflow-hidden');
    });
  });
  
  // Close modal when clicking outside
  document.querySelectorAll('.project-modal').forEach(modal => {
    modal.addEventListener('click', function(e) {
      if (e.target === this) {
        this.classList.add('hidden');
        document.body.classList.remove('overflow-hidden');
      }
    });
  });
  
  // Initialize Fancybox for all gallery images
  if (typeof Fancybox !== 'undefined') {
    Fancybox.bind("[data-fancybox]", {});
  }
  
  // Apply fade-in animation to project cards
  const fadeElements = document.querySelectorAll('.animate-fade-in');
  function fadeInElements() {
    fadeElements.forEach((element, index) => {
      setTimeout(() => {
        element.classList.remove('opacity-0');
      }, 100 * index);
    });
  }
  
  // Start fade-in animation
  fadeInElements();
} 